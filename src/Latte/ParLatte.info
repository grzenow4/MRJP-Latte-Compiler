-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Latte/ParLatte.y
-----------------------------------------------------------------------------

state 154 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident '{' ListField '}'          (6)
	TopDef -> 'class' Ident 'extends' Ident '{' ListField '}'   (7)
	Field -> Type Ident ';'                            (8)
	Field -> Type Ident '(' ListArg ')' Block          (9)
	Arg -> Type Ident                                  (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	ListField ->                                       (14)
	ListField -> Field ListField                       (15)
	ListTopDef -> TopDef                               (16)
	ListTopDef -> TopDef ListTopDef                    (17)
	Stmt -> ';'                                        (18)
	Stmt -> Expr ';'                                   (19)
	Stmt -> Expr '=' Expr ';'                          (20)
	Stmt -> Expr '++' ';'                              (21)
	Stmt -> Expr '--' ';'                              (22)
	Stmt -> 'return' Expr ';'                          (23)
	Stmt -> 'return' ';'                               (24)
	Stmt -> 'if' '(' Expr ')' Stmt                     (25)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (26)
	Stmt -> 'while' '(' Expr ')' Stmt                  (27)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (28)
	Stmt -> Block                                      (29)
	Stmt -> Type ListItem ';'                          (30)
	Block -> '{' ListStmt '}'                          (31)
	Item -> Ident                                      (32)
	Item -> Ident '=' Expr                             (33)
	ListStmt ->                                        (34)
	ListStmt -> Stmt ListStmt                          (35)
	ListItem -> Item                                   (36)
	ListItem -> Item ',' ListItem                      (37)
	Type1 -> 'int'                                     (38)
	Type1 -> 'string'                                  (39)
	Type1 -> 'boolean'                                 (40)
	Type1 -> 'void'                                    (41)
	Type1 -> Type '[]'                                 (42)
	Type -> Ident                                      (43)
	Type -> Type1                                      (44)
	Expr -> Expr1 '||' Expr                            (45)
	Expr -> Expr1                                      (46)
	Expr1 -> Expr2 '&&' Expr1                          (47)
	Expr1 -> Expr2                                     (48)
	Expr2 -> Expr2 RelOp Expr3                         (49)
	Expr2 -> Expr3                                     (50)
	Expr3 -> Expr3 AddOp Expr4                         (51)
	Expr3 -> Expr4                                     (52)
	Expr4 -> Expr4 MulOp Expr5                         (53)
	Expr4 -> Expr5                                     (54)
	Expr5 -> '!' Expr6                                 (55)
	Expr5 -> '-' Expr6                                 (56)
	Expr5 -> Expr6                                     (57)
	Expr6 -> 'new' Ident                               (58)
	Expr6 -> Expr7                                     (59)
	Expr7 -> Expr6 '.' Ident                           (60)
	Expr7 -> Expr6 '.' Ident '(' ListExpr ')'          (61)
	Expr7 -> 'new' Type '[' Expr ']'                   (62)
	Expr7 -> Expr7 '[' Expr ']'                        (63)
	Expr7 -> 'self'                                    (64)
	Expr7 -> 'null'                                    (65)
	Expr7 -> '(' Type1 ')' 'null'                      (66)
	Expr7 -> '(' Expr ')' 'null'                       (67)
	Expr7 -> Ident                                     (68)
	Expr7 -> Integer                                   (69)
	Expr7 -> String                                    (70)
	Expr7 -> 'true'                                    (71)
	Expr7 -> 'false'                                   (72)
	Expr7 -> Ident '(' ListExpr ')'                    (73)
	Expr7 -> '(' Expr ')'                              (74)
	ListExpr ->                                        (75)
	ListExpr -> Expr                                   (76)
	ListExpr -> Expr ',' ListExpr                      (77)
	AddOp -> '+'                                       (78)
	AddOp -> '-'                                       (79)
	MulOp -> '*'                                       (80)
	MulOp -> '/'                                       (81)
	MulOp -> '%'                                       (82)
	RelOp -> '<'                                       (83)
	RelOp -> '<='                                      (84)
	RelOp -> '>'                                       (85)
	RelOp -> '>='                                      (86)
	RelOp -> '=='                                      (87)
	RelOp -> '!='                                      (88)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'class'        { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'extends'      { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'for'          { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'new'          { PT _ (TS _ 34) }
	'null'         { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'self'         { PT _ (TS _ 37) }
	'string'       { PT _ (TS _ 38) }
	'true'         { PT _ (TS _ 39) }
	'void'         { PT _ (TS _ 40) }
	'while'        { PT _ (TS _ 41) }
	'{'            { PT _ (TS _ 42) }
	'||'           { PT _ (TS _ 43) }
	'}'            { PT _ (TS _ 44) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	Field           rules 8, 9
	Arg             rule  10
	ListArg         rules 11, 12, 13
	ListField       rules 14, 15
	ListTopDef      rules 16, 17
	Stmt            rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
	Block           rule  31
	Item            rules 32, 33
	ListStmt        rules 34, 35
	ListItem        rules 36, 37
	Type1           rules 38, 39, 40, 41, 42
	Type            rules 43, 44
	Expr            rules 45, 46
	Expr1           rules 47, 48
	Expr2           rules 49, 50
	Expr3           rules 51, 52
	Expr4           rules 53, 54
	Expr5           rules 55, 56, 57
	Expr6           rules 58, 59
	Expr7           rules 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74
	ListExpr        rules 75, 76, 77
	AddOp           rules 78, 79
	MulOp           rules 80, 81, 82
	RelOp           rules 83, 84, 85, 86, 87, 88

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 9
	'class'        shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type1          goto state 7
	Type           goto state 8

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 43)

	'[]'           reduce using rule 43
	L_Ident        reduce using rule 43


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 16)
	ListTopDef -> TopDef . ListTopDef                   (rule 17)

	'boolean'      shift, and enter state 9
	'class'        shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 16

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 17
	Type1          goto state 7
	Type           goto state 8

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	Type -> Type1 .                                     (rule 44)

	'['            reduce using rule 44
	'[]'           reduce using rule 44
	L_Ident        reduce using rule 44


State 8

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type1 -> Type . '[]'                                (rule 42)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 15

State 9

	Type1 -> 'boolean' .                                (rule 40)

	')'            reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	L_Ident        reduce using rule 40


State 10

	TopDef -> 'class' . Ident '{' ListField '}'         (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident '{' ListField '}'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 14

State 11

	Type1 -> 'int' .                                    (rule 38)

	')'            reduce using rule 38
	'['            reduce using rule 38
	'[]'           reduce using rule 38
	L_Ident        reduce using rule 38


State 12

	Type1 -> 'string' .                                 (rule 39)

	')'            reduce using rule 39
	'['            reduce using rule 39
	'[]'           reduce using rule 39
	L_Ident        reduce using rule 39


State 13

	Type1 -> 'void' .                                   (rule 41)

	')'            reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	L_Ident        reduce using rule 41


State 14

	TopDef -> 'class' Ident . '{' ListField '}'         (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident '{' ListField '}'    (rule 7)

	'extends'      shift, and enter state 19
	'{'            shift, and enter state 20


State 15

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 18


State 16

	Type1 -> Type '[]' .                                (rule 42)

	')'            reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	L_Ident        reduce using rule 42


State 17

	ListTopDef -> TopDef ListTopDef .                   (rule 17)

	%eof           reduce using rule 17


State 18

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 25
	ListArg        goto state 26
	Type1          goto state 7
	Type           goto state 27

State 19

	TopDef -> 'class' Ident 'extends' . Ident '{' ListField '}'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 24

State 20

	TopDef -> 'class' Ident '{' . ListField '}'         (rule 6)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Field          goto state 21
	ListField      goto state 22
	Type1          goto state 7
	Type           goto state 23

State 21

	ListField -> Field . ListField                      (rule 15)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Field          goto state 21
	ListField      goto state 34
	Type1          goto state 7
	Type           goto state 23

State 22

	TopDef -> 'class' Ident '{' ListField . '}'         (rule 6)

	'}'            shift, and enter state 33


State 23

	Field -> Type . Ident ';'                           (rule 8)
	Field -> Type . Ident '(' ListArg ')' Block         (rule 9)
	Type1 -> Type . '[]'                                (rule 42)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 32

State 24

	TopDef -> 'class' Ident 'extends' Ident . '{' ListField '}'    (rule 7)

	'{'            shift, and enter state 31


State 25

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 30


State 26

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 29


State 27

	Arg -> Type . Ident                                 (rule 10)
	Type1 -> Type . '[]'                                (rule 42)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 28

State 28

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 29

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 40

	Block          goto state 39

State 30

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 25
	ListArg        goto state 38
	Type1          goto state 7
	Type           goto state 27

State 31

	TopDef -> 'class' Ident 'extends' Ident '{' . ListField '}'    (rule 7)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Field          goto state 21
	ListField      goto state 37
	Type1          goto state 7
	Type           goto state 23

State 32

	Field -> Type Ident . ';'                           (rule 8)
	Field -> Type Ident . '(' ListArg ')' Block         (rule 9)

	'('            shift, and enter state 35
	';'            shift, and enter state 36


State 33

	TopDef -> 'class' Ident '{' ListField '}' .         (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 34

	ListField -> Field ListField .                      (rule 15)

	'}'            reduce using rule 15


State 35

	Field -> Type Ident '(' . ListArg ')' Block         (rule 9)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 25
	ListArg        goto state 72
	Type1          goto state 7
	Type           goto state 27

State 36

	Field -> Type Ident ';' .                           (rule 8)

	'boolean'      reduce using rule 8
	'int'          reduce using rule 8
	'string'       reduce using rule 8
	'void'         reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8


State 37

	TopDef -> 'class' Ident 'extends' Ident '{' ListField . '}'    (rule 7)

	'}'            shift, and enter state 71


State 38

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 39

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 40

	Block -> '{' . ListStmt '}'                         (rule 31)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 11
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'self'         shift, and enter state 66
	'string'       shift, and enter state 12
	'true'         shift, and enter state 67
	'void'         shift, and enter state 13
	'while'        shift, and enter state 68
	'{'            shift, and enter state 40
	'}'            reduce using rule 34
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Stmt           goto state 44
	Block          goto state 45
	ListStmt       goto state 46
	Type1          goto state 7
	Type           goto state 47
	Expr           goto state 48
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 41

	Type -> Ident .                                     (rule 43)
	Expr7 -> Ident .                                    (rule 68)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 73)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	'('            shift, and enter state 114
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	'++'           reduce using rule 68
	'-'            reduce using rule 68
	'--'           reduce using rule 68
	'.'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'['            reduce using rule 68
	'[]'           reduce using rule 43
	'||'           reduce using rule 68
	L_Ident        reduce using rule 43


State 42

	Expr7 -> Integer .                                  (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	'++'           reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'--'           reduce using rule 69
	'.'            reduce using rule 69
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'['            reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69


State 43

	Expr7 -> String .                                   (rule 70)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	'++'           reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'--'           reduce using rule 70
	'.'            reduce using rule 70
	'/'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'['            reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70


State 44

	ListStmt -> Stmt . ListStmt                         (rule 35)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 11
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'self'         shift, and enter state 66
	'string'       shift, and enter state 12
	'true'         shift, and enter state 67
	'void'         shift, and enter state 13
	'while'        shift, and enter state 68
	'{'            shift, and enter state 40
	'}'            reduce using rule 34
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Stmt           goto state 44
	Block          goto state 45
	ListStmt       goto state 113
	Type1          goto state 7
	Type           goto state 47
	Expr           goto state 48
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 45

	Stmt -> Block .                                     (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'null'         reduce using rule 29
	'return'       reduce using rule 29
	'self'         reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 46

	Block -> '{' ListStmt . '}'                         (rule 31)

	'}'            shift, and enter state 112


State 47

	Stmt -> Type . ListItem ';'                         (rule 30)
	Type1 -> Type . '[]'                                (rule 42)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 109
	Item           goto state 110
	ListItem       goto state 111

State 48

	Stmt -> Expr . ';'                                  (rule 19)
	Stmt -> Expr . '=' Expr ';'                         (rule 20)
	Stmt -> Expr . '++' ';'                             (rule 21)
	Stmt -> Expr . '--' ';'                             (rule 22)

	'++'           shift, and enter state 105
	'--'           shift, and enter state 106
	';'            shift, and enter state 107
	'='            shift, and enter state 108


State 49

	Expr -> Expr1 . '||' Expr                           (rule 45)
	Expr -> Expr1 .                                     (rule 46)

	')'            reduce using rule 46
	'++'           reduce using rule 46
	','            reduce using rule 46
	'--'           reduce using rule 46
	';'            reduce using rule 46
	'='            reduce using rule 46
	']'            reduce using rule 46
	'||'           shift, and enter state 104


State 50

	Expr1 -> Expr2 . '&&' Expr1                         (rule 47)
	Expr1 -> Expr2 .                                    (rule 48)
	Expr2 -> Expr2 . RelOp Expr3                        (rule 49)

	'!='           shift, and enter state 97
	'&&'           shift, and enter state 98
	')'            reduce using rule 48
	'++'           reduce using rule 48
	','            reduce using rule 48
	'--'           reduce using rule 48
	';'            reduce using rule 48
	'<'            shift, and enter state 99
	'<='           shift, and enter state 100
	'='            reduce using rule 48
	'=='           shift, and enter state 101
	'>'            shift, and enter state 102
	'>='           shift, and enter state 103
	']'            reduce using rule 48
	'||'           reduce using rule 48

	RelOp          goto state 96

State 51

	Expr2 -> Expr3 .                                    (rule 50)
	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)

	'!='           reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'+'            shift, and enter state 94
	'++'           reduce using rule 50
	','            reduce using rule 50
	'-'            shift, and enter state 95
	'--'           reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50

	AddOp          goto state 93

State 52

	Expr3 -> Expr4 .                                    (rule 52)
	Expr4 -> Expr4 . MulOp Expr5                        (rule 53)

	'!='           reduce using rule 52
	'%'            shift, and enter state 90
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 91
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'/'            shift, and enter state 92
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52

	MulOp          goto state 89

State 53

	Expr4 -> Expr5 .                                    (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 54

	Expr5 -> Expr6 .                                    (rule 57)
	Expr7 -> Expr6 . '.' Ident                          (rule 60)
	Expr7 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 61)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'.'            shift, and enter state 88
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 55

	Expr6 -> Expr7 .                                    (rule 59)
	Expr7 -> Expr7 . '[' Expr ']'                       (rule 63)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'++'           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            shift, and enter state 87
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 56

	Expr5 -> '!' . Expr6                                (rule 55)

	'('            shift, and enter state 57
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 86
	Expr7          goto state 55

State 57

	Expr7 -> '(' . Type1 ')' 'null'                     (rule 66)
	Expr7 -> '(' . Expr ')' 'null'                      (rule 67)
	Expr7 -> '(' . Expr ')'                             (rule 74)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'int'          shift, and enter state 11
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'string'       shift, and enter state 12
	'true'         shift, and enter state 67
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Type1          goto state 83
	Type           goto state 84
	Expr           goto state 85
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 58

	Expr5 -> '-' . Expr6                                (rule 56)

	'('            shift, and enter state 57
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr6          goto state 82
	Expr7          goto state 55

State 59

	Stmt -> ';' .                                       (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'null'         reduce using rule 18
	'return'       reduce using rule 18
	'self'         reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 60

	Expr7 -> 'false' .                                  (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	'++'           reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'--'           reduce using rule 72
	'.'            reduce using rule 72
	'/'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'='            reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'['            reduce using rule 72
	']'            reduce using rule 72
	'||'           reduce using rule 72


State 61

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 28)

	'('            shift, and enter state 81


State 62

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 25)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 26)

	'('            shift, and enter state 80


State 63

	Expr6 -> 'new' . Ident                              (rule 58)
	Expr7 -> 'new' . Type '[' Expr ']'                  (rule 62)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 78
	Type1          goto state 7
	Type           goto state 79

State 64

	Expr7 -> 'null' .                                   (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	'++'           reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'--'           reduce using rule 65
	'.'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 65

	Stmt -> 'return' . Expr ';'                         (rule 23)
	Stmt -> 'return' . ';'                              (rule 24)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 77
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 76
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 66

	Expr7 -> 'self' .                                   (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	'++'           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'--'           reduce using rule 64
	'.'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 67

	Expr7 -> 'true' .                                   (rule 71)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	'++'           reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'--'           reduce using rule 71
	'.'            reduce using rule 71
	'/'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'='            reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'['            reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71


State 68

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 27)

	'('            shift, and enter state 74


State 69

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 70

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 71

	TopDef -> 'class' Ident 'extends' Ident '{' ListField '}' .    (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 72

	Field -> Type Ident '(' ListArg . ')' Block         (rule 9)

	')'            shift, and enter state 73


State 73

	Field -> Type Ident '(' ListArg ')' . Block         (rule 9)

	'{'            shift, and enter state 40

	Block          goto state 137

State 74

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 27)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 136
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 75

	Expr7 -> Ident .                                    (rule 68)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 73)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	'('            shift, and enter state 114
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	'++'           reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'--'           reduce using rule 68
	'.'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68


State 76

	Stmt -> 'return' Expr . ';'                         (rule 23)

	';'            shift, and enter state 135


State 77

	Stmt -> 'return' ';' .                              (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'null'         reduce using rule 24
	'return'       reduce using rule 24
	'self'         reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 78

	Type -> Ident .                                     (rule 43)
	Expr6 -> 'new' Ident .                              (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	'++'           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 79

	Type1 -> Type . '[]'                                (rule 42)
	Expr7 -> 'new' Type . '[' Expr ']'                  (rule 62)

	'['            shift, and enter state 134
	'[]'           shift, and enter state 16


State 80

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 25)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 26)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 133
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 81

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 28)

	'boolean'      shift, and enter state 9
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type1          goto state 7
	Type           goto state 132

State 82

	Expr5 -> '-' Expr6 .                                (rule 56)
	Expr7 -> Expr6 . '.' Ident                          (rule 60)
	Expr7 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 61)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'.'            shift, and enter state 88
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 83

	Type -> Type1 .                                     (rule 44)
	Expr7 -> '(' Type1 . ')' 'null'                     (rule 66)

	')'            shift, and enter state 131
	'[]'           reduce using rule 44


State 84

	Type1 -> Type . '[]'                                (rule 42)

	'[]'           shift, and enter state 16


State 85

	Expr7 -> '(' Expr . ')' 'null'                      (rule 67)
	Expr7 -> '(' Expr . ')'                             (rule 74)

	')'            shift, and enter state 130


State 86

	Expr5 -> '!' Expr6 .                                (rule 55)
	Expr7 -> Expr6 . '.' Ident                          (rule 60)
	Expr7 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 61)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'.'            shift, and enter state 88
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 87

	Expr7 -> Expr7 '[' . Expr ']'                       (rule 63)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 129
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 88

	Expr7 -> Expr6 '.' . Ident                          (rule 60)
	Expr7 -> Expr6 '.' . Ident '(' ListExpr ')'         (rule 61)

	L_Ident        shift, and enter state 2

	Ident          goto state 128

State 89

	Expr4 -> Expr4 MulOp . Expr5                        (rule 53)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr5          goto state 127
	Expr6          goto state 54
	Expr7          goto state 55

State 90

	MulOp -> '%' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'null'         reduce using rule 82
	'self'         reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 91

	MulOp -> '*' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'null'         reduce using rule 80
	'self'         reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 92

	MulOp -> '/' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'null'         reduce using rule 81
	'self'         reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 93

	Expr3 -> Expr3 AddOp . Expr4                        (rule 51)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr4          goto state 126
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 94

	AddOp -> '+' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'null'         reduce using rule 78
	'self'         reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 95

	AddOp -> '-' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'null'         reduce using rule 79
	'self'         reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 96

	Expr2 -> Expr2 RelOp . Expr3                        (rule 49)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr3          goto state 125
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 97

	RelOp -> '!=' .                                     (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'null'         reduce using rule 88
	'self'         reduce using rule 88
	'true'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 98

	Expr1 -> Expr2 '&&' . Expr1                         (rule 47)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr1          goto state 124
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 99

	RelOp -> '<' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'null'         reduce using rule 83
	'self'         reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 100

	RelOp -> '<=' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'null'         reduce using rule 84
	'self'         reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 101

	RelOp -> '==' .                                     (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'null'         reduce using rule 87
	'self'         reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 102

	RelOp -> '>' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'null'         reduce using rule 85
	'self'         reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 103

	RelOp -> '>=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'null'         reduce using rule 86
	'self'         reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 104

	Expr -> Expr1 '||' . Expr                           (rule 45)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 123
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 105

	Stmt -> Expr '++' . ';'                             (rule 21)

	';'            shift, and enter state 122


State 106

	Stmt -> Expr '--' . ';'                             (rule 22)

	';'            shift, and enter state 121


State 107

	Stmt -> Expr ';' .                                  (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'null'         reduce using rule 19
	'return'       reduce using rule 19
	'self'         reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 108

	Stmt -> Expr '=' . Expr ';'                         (rule 20)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 120
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 109

	Item -> Ident .                                     (rule 32)
	Item -> Ident . '=' Expr                            (rule 33)

	','            reduce using rule 32
	';'            reduce using rule 32
	'='            shift, and enter state 119


State 110

	ListItem -> Item .                                  (rule 36)
	ListItem -> Item . ',' ListItem                     (rule 37)

	','            shift, and enter state 118
	';'            reduce using rule 36


State 111

	Stmt -> Type ListItem . ';'                         (rule 30)

	';'            shift, and enter state 117


State 112

	Block -> '{' ListStmt '}' .                         (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'class'        reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'null'         reduce using rule 31
	'return'       reduce using rule 31
	'self'         reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31
	%eof           reduce using rule 31


State 113

	ListStmt -> Stmt ListStmt .                         (rule 35)

	'}'            reduce using rule 35


State 114

	Expr7 -> Ident '(' . ListExpr ')'                   (rule 73)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 75
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 115
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55
	ListExpr       goto state 116

State 115

	ListExpr -> Expr .                                  (rule 76)
	ListExpr -> Expr . ',' ListExpr                     (rule 77)

	')'            reduce using rule 76
	','            shift, and enter state 150


State 116

	Expr7 -> Ident '(' ListExpr . ')'                   (rule 73)

	')'            shift, and enter state 149


State 117

	Stmt -> Type ListItem ';' .                         (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'null'         reduce using rule 30
	'return'       reduce using rule 30
	'self'         reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 118

	ListItem -> Item ',' . ListItem                     (rule 37)

	L_Ident        shift, and enter state 2

	Ident          goto state 109
	Item           goto state 110
	ListItem       goto state 148

State 119

	Item -> Ident '=' . Expr                            (rule 33)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 147
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 120

	Stmt -> Expr '=' Expr . ';'                         (rule 20)

	';'            shift, and enter state 146


State 121

	Stmt -> Expr '--' ';' .                             (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'null'         reduce using rule 22
	'return'       reduce using rule 22
	'self'         reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 122

	Stmt -> Expr '++' ';' .                             (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'null'         reduce using rule 21
	'return'       reduce using rule 21
	'self'         reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 123

	Expr -> Expr1 '||' Expr .                           (rule 45)

	')'            reduce using rule 45
	'++'           reduce using rule 45
	','            reduce using rule 45
	'--'           reduce using rule 45
	';'            reduce using rule 45
	'='            reduce using rule 45
	']'            reduce using rule 45


State 124

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 47)

	')'            reduce using rule 47
	'++'           reduce using rule 47
	','            reduce using rule 47
	'--'           reduce using rule 47
	';'            reduce using rule 47
	'='            reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 125

	Expr2 -> Expr2 RelOp Expr3 .                        (rule 49)
	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)

	'!='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'+'            shift, and enter state 94
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            shift, and enter state 95
	'--'           reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49

	AddOp          goto state 93

State 126

	Expr3 -> Expr3 AddOp Expr4 .                        (rule 51)
	Expr4 -> Expr4 . MulOp Expr5                        (rule 53)

	'!='           reduce using rule 51
	'%'            shift, and enter state 90
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 91
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'/'            shift, and enter state 92
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 89

State 127

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 128

	Expr7 -> Expr6 '.' Ident .                          (rule 60)
	Expr7 -> Expr6 '.' Ident . '(' ListExpr ')'         (rule 61)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            shift, and enter state 145
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	'++'           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'.'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 129

	Expr7 -> Expr7 '[' Expr . ']'                       (rule 63)

	']'            shift, and enter state 144


State 130

	Expr7 -> '(' Expr ')' . 'null'                      (rule 67)
	Expr7 -> '(' Expr ')' .                             (rule 74)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	'++'           reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'--'           reduce using rule 74
	'.'            reduce using rule 74
	'/'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'='            reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'['            reduce using rule 74
	']'            reduce using rule 74
	'null'         shift, and enter state 143
	'||'           reduce using rule 74


State 131

	Expr7 -> '(' Type1 ')' . 'null'                     (rule 66)

	'null'         shift, and enter state 142


State 132

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 28)
	Type1 -> Type . '[]'                                (rule 42)

	'[]'           shift, and enter state 16
	L_Ident        shift, and enter state 2

	Ident          goto state 141

State 133

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 25)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 26)

	')'            shift, and enter state 140


State 134

	Expr7 -> 'new' Type '[' . Expr ']'                  (rule 62)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 139
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 135

	Stmt -> 'return' Expr ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'null'         reduce using rule 23
	'return'       reduce using rule 23
	'self'         reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 136

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 27)

	')'            shift, and enter state 138


State 137

	Field -> Type Ident '(' ListArg ')' Block .         (rule 9)

	'boolean'      reduce using rule 9
	'int'          reduce using rule 9
	'string'       reduce using rule 9
	'void'         reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9


State 138

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 27)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 11
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'self'         shift, and enter state 66
	'string'       shift, and enter state 12
	'true'         shift, and enter state 67
	'void'         shift, and enter state 13
	'while'        shift, and enter state 68
	'{'            shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Stmt           goto state 156
	Block          goto state 45
	Type1          goto state 7
	Type           goto state 47
	Expr           goto state 48
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 139

	Expr7 -> 'new' Type '[' Expr . ']'                  (rule 62)

	']'            shift, and enter state 155


State 140

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 25)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 26)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 11
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'self'         shift, and enter state 66
	'string'       shift, and enter state 12
	'true'         shift, and enter state 67
	'void'         shift, and enter state 13
	'while'        shift, and enter state 68
	'{'            shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Stmt           goto state 154
	Block          goto state 45
	Type1          goto state 7
	Type           goto state 47
	Expr           goto state 48
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 141

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 28)

	':'            shift, and enter state 153


State 142

	Expr7 -> '(' Type1 ')' 'null' .                     (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	'++'           reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'--'           reduce using rule 66
	'.'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 143

	Expr7 -> '(' Expr ')' 'null' .                      (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	'++'           reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'--'           reduce using rule 67
	'.'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 144

	Expr7 -> Expr7 '[' Expr ']' .                       (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'++'           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'--'           reduce using rule 63
	'.'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 145

	Expr7 -> Expr6 '.' Ident '(' . ListExpr ')'         (rule 61)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 75
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 115
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55
	ListExpr       goto state 152

State 146

	Stmt -> Expr '=' Expr ';' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'null'         reduce using rule 20
	'return'       reduce using rule 20
	'self'         reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 147

	Item -> Ident '=' Expr .                            (rule 33)

	','            reduce using rule 33
	';'            reduce using rule 33


State 148

	ListItem -> Item ',' ListItem .                     (rule 37)

	';'            reduce using rule 37


State 149

	Expr7 -> Ident '(' ListExpr ')' .                   (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	'++'           reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'--'           reduce using rule 73
	'.'            reduce using rule 73
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'='            reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'['            reduce using rule 73
	']'            reduce using rule 73
	'||'           reduce using rule 73


State 150

	ListExpr -> Expr ',' . ListExpr                     (rule 77)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 75
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 115
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55
	ListExpr       goto state 151

State 151

	ListExpr -> Expr ',' ListExpr .                     (rule 77)

	')'            reduce using rule 77


State 152

	Expr7 -> Expr6 '.' Ident '(' ListExpr . ')'         (rule 61)

	')'            shift, and enter state 159


State 153

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 28)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'self'         shift, and enter state 66
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 75
	Integer        goto state 42
	String         goto state 43
	Expr           goto state 158
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 154

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 25)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 26)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         shift, and enter state 157
			(reduce using rule 25)

	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'null'         reduce using rule 25
	'return'       reduce using rule 25
	'self'         reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 155

	Expr7 -> 'new' Type '[' Expr ']' .                  (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'++'           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'.'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 156

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'null'         reduce using rule 27
	'return'       reduce using rule 27
	'self'         reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 157

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 26)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 11
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'self'         shift, and enter state 66
	'string'       shift, and enter state 12
	'true'         shift, and enter state 67
	'void'         shift, and enter state 13
	'while'        shift, and enter state 68
	'{'            shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Stmt           goto state 161
	Block          goto state 45
	Type1          goto state 7
	Type           goto state 47
	Expr           goto state 48
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 158

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 28)

	')'            shift, and enter state 160


State 159

	Expr7 -> Expr6 '.' Ident '(' ListExpr ')' .         (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'++'           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'.'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 160

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 28)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 9
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 11
	'new'          shift, and enter state 63
	'null'         shift, and enter state 64
	'return'       shift, and enter state 65
	'self'         shift, and enter state 66
	'string'       shift, and enter state 12
	'true'         shift, and enter state 67
	'void'         shift, and enter state 13
	'while'        shift, and enter state 68
	'{'            shift, and enter state 40
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 41
	Integer        goto state 42
	String         goto state 43
	Stmt           goto state 162
	Block          goto state 45
	Type1          goto state 7
	Type           goto state 47
	Expr           goto state 48
	Expr1          goto state 49
	Expr2          goto state 50
	Expr3          goto state 51
	Expr4          goto state 52
	Expr5          goto state 53
	Expr6          goto state 54
	Expr7          goto state 55

State 161

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'null'         reduce using rule 26
	'return'       reduce using rule 26
	'self'         reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 162

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'null'         reduce using rule 28
	'return'       reduce using rule 28
	'self'         reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 89
Number of terminals: 47
Number of non-terminals: 30
Number of states: 163
